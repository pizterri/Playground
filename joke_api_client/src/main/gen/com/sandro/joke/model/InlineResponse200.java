/*
 * Sample Jokes API
 * This is the example Swagger specfiication for the https://official-joke-api.appspot.com/random_joke
 *
 * The version of the OpenAPI document: 0.1.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sandro.joke.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * InlineResponse200
 */
@JsonPropertyOrder({
  InlineResponse200.JSON_PROPERTY_ID,
  InlineResponse200.JSON_PROPERTY_TYPE,
  InlineResponse200.JSON_PROPERTY_SETUP,
  InlineResponse200.JSON_PROPERTY_PUNCHLINE
})
@JsonTypeName("inline_response_200")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-11T10:45:42.054267900+01:00[Europe/Zurich]")
public class InlineResponse200 {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_SETUP = "setup";
  private String setup;

  public static final String JSON_PROPERTY_PUNCHLINE = "punchline";
  private String punchline;

  public InlineResponse200() {
  }

  public InlineResponse200 id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  public InlineResponse200 type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "general", value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public InlineResponse200 setup(String setup) {
    
    this.setup = setup;
    return this;
  }

   /**
   * Get setup
   * @return setup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "What do you call a boomerang that won't come back?", value = "")
  @JsonProperty(JSON_PROPERTY_SETUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSetup() {
    return setup;
  }


  @JsonProperty(JSON_PROPERTY_SETUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSetup(String setup) {
    this.setup = setup;
  }


  public InlineResponse200 punchline(String punchline) {
    
    this.punchline = punchline;
    return this;
  }

   /**
   * Get punchline
   * @return punchline
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "A Stick.", value = "")
  @JsonProperty(JSON_PROPERTY_PUNCHLINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPunchline() {
    return punchline;
  }


  @JsonProperty(JSON_PROPERTY_PUNCHLINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPunchline(String punchline) {
    this.punchline = punchline;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse200 inlineResponse200 = (InlineResponse200) o;
    return Objects.equals(this.id, inlineResponse200.id) &&
        Objects.equals(this.type, inlineResponse200.type) &&
        Objects.equals(this.setup, inlineResponse200.setup) &&
        Objects.equals(this.punchline, inlineResponse200.punchline);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, setup, punchline);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse200 {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    setup: ").append(toIndentedString(setup)).append("\n");
    sb.append("    punchline: ").append(toIndentedString(punchline)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

